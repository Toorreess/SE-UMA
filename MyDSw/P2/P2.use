model P2

--CLASES
class Parque
  operations
    hayOperariosDisponible(): Boolean =
      self.trabajador->select(t | t.ocupado = true)->size() > 0
end

class Operario
  attributes
    ocupado:Boolean
  operations
    mandaOperarioReparar(calle: String, num: Integer)
    begin
      self.miParque.misAtracciones->select(a | a.calle = calle)->asOrderedSet()->first().tipoComponente->
      select(c| c.numero = num)->asOrderedSet()->first().arreglarComponente();
      self.ocupado := false;
    end
    pre: self.ocupado = true
    post: self.ocupado = false
end

class Dispositivo
 attributes
  avisosResueltos:Integer

 operations
  aumentaAvisos()
  begin
    self.avisosResueltos := self.avisosResueltos+1
  end
  pre: self.avisosResueltos >= 0
  post: self.avisosResueltos = self.avisosResueltos@pre +1

  AvisoDispositivo(calle: String, num: Integer)
  begin
    self.trabajador.ocupado := true;
    self.trabajador.mandaOperarioReparar(calle, num);
  end
  pre: self.trabajador.ocupado = false
  post: self.trabajador.ocupado = true
end

class CRA
 operations
  recibeAvisoCRA(calle: String, num: Integer, com: Componente)
  begin
    if(self.miParque->asOrderedSet()->first().hayOperariosDisponible()) then
      self.miDispositivo->select(d| d.trabajador.ocupado = false)->asOrderedSet()->first().AvisoDispositivo(calle, num);
    else
      com.activaSenyalSolicitud();
    end
  end
end

abstract class Atraccion
  attributes
    calle:String
    hayAveria:Boolean
    enMovimiento:Boolean
  operations
    hayFallos(): Boolean =
      self.tipoComponente->select(c| c.bienAnclado = false and c.senyalSolicitud = true)->asOrderedSet()->size() = 0
    
    recibeAvisoAtraccion()
    begin
      self.hayAveria := true;
      self.enMovimiento := false;
    end
    pre: true
    post: self.hayAveria = true and self.enMovimiento = false

    atraccionPonerEnMovimiento()
    begin
      self.enMovimiento := true
    end
    pre: self.enMovimiento = false
    post: self.enMovimiento = true
end

class MontanyaRusa < Atraccion
end

class Noria < Atraccion
end

abstract class Componente
  attributes
    bienAnclado:Boolean
    numero:Integer
    senyalSolicitud:Boolean
    enReparacion:Boolean

  operations
    mandaAviso()
    begin
      self.tipoAtraccion.recibeAvisoAtraccion();
      self.central.recibeAvisoCRA(self.tipoAtraccion.calle, self.numero, self);
    end
    pre: self.bienAnclado = false
    post: true

    activaSenyalSolicitud()
    begin
      self.senyalSolicitud := true
    end
    pre: self.senyalSolicitud = false
    post: self.senyalSolicitud = true

    arreglarComponente()
    begin
      self.enReparacion := false;
      self.senyalSolicitud := false;
      self.bienAnclado := true;
      if (self.tipoAtraccion.hayFallos() = false) then
        self.tipoAtraccion.atraccionPonerEnMovimiento()
      end
    end
    pre: self.enReparacion = true
    pre: self.bienAnclado = false
    post: self.enReparacion = false
    post: self.senyalSolicitud = false
    post: self.bienAnclado = true

end

class Vagon < Componente
end

class Vehiculo <Componente
end

class DetectorVagon
  attributes
    hayFallo:Boolean
  operations
    tieneFalloVagon(): Boolean = self.hayFallo = true

    generaFalloVagon()
    begin
      self.hayFallo := true;
      self.unVagon.mandaAviso();
    end
    pre: self.hayFallo = false
    post: self.hayFallo = true
end

class DetectorVehiculo
  attributes
    hayFallo:Boolean
  operations
    tieneFalloVehiculo(): Boolean = self.hayFallo = true

    generaFalloVehiculo()
    begin
      self.hayFallo := true;
      self.unVehiculo.mandaAviso();
    end
    pre: self.hayFallo = false
    post: self.hayFallo = true
end


--ASOCIACIONES
composition Posesion between 
 Parque [1] role miParque
 Atraccion [1..*] role misAtracciones
end

aggregation Trabajo between
 Parque[1] role miParque
 Operario [1..*] role trabajador
end

association Control between
 Operario [1] role trabajador
 Dispositivo [1] role miDispositivo
end

association Aviso between
 Dispositivo [1..*] role miDispositivo
 CRA [1] role central
end

aggregation ComponenteDe between
 Atraccion [1] role tipoAtraccion 
 Componente [1..*] role tipoComponente
end


association Posicion between
 Vagon [0..1] role anterior
 Vagon [0..1] role posterior
end

composition DetectorM between
 Vagon [1] role unVagon
 DetectorVagon [1] role miDetectorM
end

composition DetectorN between
 Vehiculo [1] role unVehiculo
 DetectorVehiculo [1] role miDetectorN
end

association AvisoCRA between
 CRA [1] role central
 Componente [0..*] role componente
end

association AvisoDispositivo between
 Dispositivo [1] role dispositivo
 Componente [0..*] role componente
end

association ParqueCRA between
  CRA [1] role central
  Parque [1] role miParque
end